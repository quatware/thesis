#!/usr/bin/env python3
# emgplots.py: create diagrams based on csv generated by reademgdata.py
# Copyright 2019 Peter Kvillegård. Subject to the Unlicense.

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import numpy as np
import datetime

plt.rcParams["font.family"] = "serif"

# read csv
df = pd.read_csv('./emgdata.csv')

# Group data: [mean*100, SD*100]
pMVIC_Ejadd_DPI = [np.mean(df['percent_mvic_ejadd_dpi'])*100, np.std(df['percent_mvic_ejadd_dpi'])*100]
pMVIC_Add_DPI = [np.mean(df['percent_mvic_add_dpi'])*100, np.std(df['percent_mvic_add_dpi'])*100]

pMVIC_Ejadd_DPP = [np.mean(df['percent_mvic_ejadd_dpp'])*100, np.std(df['percent_mvic_ejadd_dpp'])*100]
pMVIC_Add_DPP = [np.mean(df['percent_mvic_add_dpp'])*100, np.std(df['percent_mvic_add_dpp'])*100]

pMVIC_Ejadd_INF = [np.mean(df['percent_mvic_ejadd_inf'])*100, np.std(df['percent_mvic_ejadd_inf'])*100]
pMVIC_Add_INF = [np.mean(df['percent_mvic_add_inf'])*100, np.std(df['percent_mvic_add_inf'])*100]

means = [pMVIC_Ejadd_DPI[0],pMVIC_Add_DPI[0],
         pMVIC_Ejadd_DPP[0],pMVIC_Add_DPP[0],
         pMVIC_Ejadd_INF[0],pMVIC_Add_INF[0]]

sds= [pMVIC_Ejadd_DPI[1],pMVIC_Add_DPI[1],
      pMVIC_Ejadd_DPP[1],pMVIC_Add_DPP[1],
      pMVIC_Ejadd_INF[1],pMVIC_Add_INF[1]]

### Barplot %MVIC DPP,DPI,INF; ejadd vs add, group data
#x-axis bar positions
x = [1,2,4.5,5.5,8,9]

barcolors=['#777777', '#cccccc']

fig, ax = plt.subplots(figsize=(6, 3.5))

ax.bar(x,means,width=1, color=barcolors)
ax.set_title('Muskelaktivering utan adduktion och med adduktion')
ax.set_xlim([-0.5, 10.5])
ax.set_ylim([0, 100])
ax.set_xticks([1.5,5,8.5])
ax.set_xticklabels(['DPI', 'DPP','INF'])
ax.set_ylabel('Normaliserad\n muskelaktivering (%MVIC)')
ax.set_xlabel('Muskel')

plt.errorbar(x, means, yerr=sds, ls='none', capsize=5, color='black', elinewidth=1)

#Legend
ejadd_patch = mpatches.Patch(color=barcolors[0], label='Utan adduktion')
add_patch = mpatches.Patch(color=barcolors[1], label='Med adduktion')
ax.legend(handles=[ejadd_patch,add_patch], loc='upper left', ncol=1)

#Footnote
plt.annotate('Errorbars: ±1 SD',(0.5,0),(0,-50), xycoords='axes fraction', textcoords='offset points',ha='center', va='bottom')

#WIP text
#now = datetime.datetime.now().replace(microsecond=0).isoformat().replace('T',' ')
#plt.text(0.5, 0.5, 'Test '+now, ha='center', va='center', color='r', size=15, transform=ax.transAxes).set_alpha(0.5)

fig.tight_layout()
plt.savefig("mvicbars.png", dpi=300)
plt.show()

### Lineplots 3 subplots individuals

n= len(df)
print('length:'+str(n))

pMVIC_Add_DPI = 0.3 * 100
pMVIC_Ejadd_DPI = 0.66 * 100

pMVIC_Add_DPP = 0.4 * 100
pMVIC_Ejadd_DPP = 0.66 * 100

pMVIC_Add_INF = 0.66 * 100
pMVIC_Ejadd_INF = 0.66 * 100

x = [0.3,1.7]
barcolors=['#999999', '#cccccc']
xlim=[0, 2]
ylim=[0, 100]

fig, [axDPI, axDPP, axINF] = plt.subplots(nrows=1, ncols=3,figsize=(8, 4))
fig.suptitle('%MVIC utan och med adduktion per deltagare', fontsize=12)

# DPI
for i in range(0,len(df)):
    print('index'+str(i)+' '+str(df.loc[i,'percent_mvic_ejadd_dpi']*100)+','+str(df.loc[i,'percent_mvic_add_dpi']))
    axDPI.plot(x,[df.loc[i,'percent_mvic_ejadd_dpi']*100,df.loc[i,'percent_mvic_add_dpi']*100], 'o-')

axDPI.set_title('DPI')
axDPI.set_xlim(xlim)
axDPI.set_ylim(0,50)
axDPI.set_xticks(x)
axDPI.set_xticklabels(['Utan\nadduktion','Med\nadduktion'])
axDPI.set_ylabel('Normaliserad muskelaktivering (%MVIC)')

# DPP
for i in range(0,len(df)):
    print('index'+str(i)+' '+str(df.loc[i,'percent_mvic_ejadd_dpp']*100)+','+str(df.loc[i,'percent_mvic_add_dpp']))
    axDPP.plot(x,[df.loc[i,'percent_mvic_ejadd_dpp']*100,df.loc[i,'percent_mvic_add_dpp']*100], 'o-')

axDPP.set_title('DPP')
axDPP.set_xlim(xlim)
axDPP.set_ylim(0,80)
axDPP.set_xticks(x)
axDPP.set_xticklabels(['Utan\nadduktion','Med\nadduktion'])

# INF
for i in range(0,len(df)):
    print('index'+str(i)+' '+str(df.loc[i,'percent_mvic_ejadd_inf']*100)+','+str(df.loc[i,'percent_mvic_add_inf']))
    axINF.plot(x,[df.loc[i,'percent_mvic_ejadd_inf']*100,df.loc[i,'percent_mvic_add_inf']*100], 'o-')

axINF.set_title('INF')
axINF.set_xlim(xlim)
axINF.set_ylim(20,130)
axINF.set_xticks(x)
axINF.set_xticklabels(['Utan\nadduktion','Med\nadduktion'])

plt.tight_layout(rect=[0,0.1,1,0.9])

plt.savefig("lines.png", dpi=300)
plt.show()
